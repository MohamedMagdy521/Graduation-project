[{"E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\index.js":"1","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\reportWebVitals.js":"2","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\App.js":"3","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\layout\\navbar\\Navbar.jsx":"4","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\routes\\Routes.jsx":"5","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\layout\\Homepage\\Homepage2.jsx":"6","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\layout\\Homepage\\Homepage.jsx":"7","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\pages\\user\\authentication\\login\\Login.jsx":"8","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\pages\\user\\authentication\\AuthRoutes.jsx":"9","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\pages\\user\\authentication\\logout\\Logout.jsx":"10","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\pages\\user\\authentication\\resetPassword\\ResetPassword.jsx":"11","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\pages\\user\\authentication\\signUp\\SignUp.jsx":"12","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\pages\\user\\authentication\\signform\\signform.jsx":"13"},{"size":612,"mtime":1612031784510,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1611868373603,"results":"16","hashOfConfig":"15"},{"size":463,"mtime":1612031784468,"results":"17","hashOfConfig":"15"},{"size":2461,"mtime":1612039556121,"results":"18","hashOfConfig":"15"},{"size":1704,"mtime":1612035676255,"results":"19","hashOfConfig":"15"},{"size":15260,"mtime":1612031784532,"results":"20","hashOfConfig":"15"},{"size":17078,"mtime":1612031784527,"results":"21","hashOfConfig":"15"},{"size":2844,"mtime":1611868373595,"results":"22","hashOfConfig":"15"},{"size":760,"mtime":1612031784550,"results":"23","hashOfConfig":"15"},{"size":164,"mtime":1611868373595,"results":"24","hashOfConfig":"15"},{"size":2341,"mtime":1611868373596,"results":"25","hashOfConfig":"15"},{"size":8705,"mtime":1611868373596,"results":"26","hashOfConfig":"15"},{"size":5133,"mtime":1612104449109,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1rktl9o",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\index.js",[],["60","61"],"E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\reportWebVitals.js",[],"E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\App.js",["62","63"],"import Navbar from \"./layout/navbar/Navbar.jsx\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Routes from \"./routes/Routes\";\r\nimport Homepage from \"./layout/Homepage/Homepage\";\r\nimport Homepage2 from \"./layout/Homepage/Homepage2\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar />\r\n        {/* <Homepage2/> */}\r\n        <Routes/>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\layout\\navbar\\Navbar.jsx",[],"E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\routes\\Routes.jsx",["64"],"import React, { Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nconst AuthRoutes = React.lazy(() => import(\"../pages/user/authentication/AuthRoutes\"));\r\nconst Homepage2 = React.lazy(() =>\r\n  import(\"../layout/Homepage/Homepage2\")\r\n);\r\n\r\nconst Login = React.lazy(() =>\r\n  import(\"../pages/user/authentication/login/Login\")\r\n);\r\n\r\n\r\nconst signform = React.lazy(() =>\r\n  import(\"../pages/user/authentication/signform/signform\")\r\n);\r\n\r\n// const About = React.lazy(() => import(\"../Pages/About\"));\r\n// const Contact = React.lazy(() => import(\"../Pages/Contact\"));\r\n// const Counter = React.lazy(() => import(\"../Pages/Counter\"));\r\n// const Users = React.lazy(() => import(\"../Pages/Users\"));\r\n// const Products = React.lazy(() => import(\"../Pages/Products\"));\r\n// const ChangeCont = React.lazy(() => import(\"../Pages/ChangeCont\"));\r\n// const GoogleBooks = React.lazy(() => import(\"../Pages/GoogleBooks\"));\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Suspense fallback={\"Loading\"}>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Homepage2} />\r\n        <Route path=\"/login\" exact component={Login} />\r\n        <Route path=\"/signform\" exact component={signform} />\r\n        \r\n\r\n        {/* <Route path=\"/about\" exact component={About} />\r\n        <Route path=\"/contact\" exact component={Contact} />\r\n        <Route path=\"/counter\" exact component={Counter} />\r\n        <Route path=\"/users\" exact component={Users} />\r\n        <Route path=\"/products\" exact component={Products} />\r\n        <Route path=\"/changecont\" exact component={ChangeCont} />\r\n        <Route path=\"/books\" exact component={GoogleBooks} /> */}\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\layout\\Homepage\\Homepage2.jsx",["65","66","67","68","69","70","71"],"import React, { useEffect } from \"react\";\r\n\r\nexport default function Homepage2() {\r\n  useEffect(() => {\r\n    function lerp({ x, y }, { x: targetX, y: targetY }) {\r\n      const fraction = 0.1;\r\n\r\n      x += (targetX - x) * fraction;\r\n      y += (targetY - y) * fraction;\r\n\r\n      return { x, y };\r\n    }\r\n\r\n    class Slider {\r\n      constructor(el) {\r\n        const imgClass = (this.IMG_CLASS = \"slider__images-item\");\r\n        const textClass = (this.TEXT_CLASS = \"slider__text-item\");\r\n        const activeImgClass = (this.ACTIVE_IMG_CLASS = `${imgClass}--active`);\r\n        const activeTextClass = (this.ACTIVE_TEXT_CLASS = `${textClass}--active`);\r\n\r\n        this.el = el;\r\n        this.contentEl = document.getElementById(\"slider-content\");\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n\r\n        // taking advantage of the live nature of 'getElement...' methods\r\n        this.activeImg = el.getElementsByClassName(activeImgClass);\r\n        this.activeText = el.getElementsByClassName(activeTextClass);\r\n        this.images = el.getElementsByTagName(\"img\");\r\n\r\n        document\r\n          .getElementById(\"slider-dots\")\r\n          .addEventListener(\"click\", this.onDotClick.bind(this));\r\n\r\n        document\r\n          .getElementById(\"left\")\r\n          .addEventListener(\"click\", this.prev.bind(this));\r\n\r\n        document\r\n          .getElementById(\"right\")\r\n          .addEventListener(\"click\", this.next.bind(this));\r\n\r\n        window.addEventListener(\"resize\", this.onResize.bind(this));\r\n\r\n        this.onResize();\r\n\r\n        this.length = this.images.length;\r\n        this.lastX = this.lastY = this.targetX = this.targetY = 0;\r\n      }\r\n      onResize() {\r\n        const htmlStyles = getComputedStyle(document.documentElement);\r\n        const mobileBreakpoint = htmlStyles.getPropertyValue(\"--mobile-bkp\");\r\n\r\n        const isMobile = (this.isMobile = matchMedia(\r\n          `only screen and (max-width: ${mobileBreakpoint})`\r\n        ).matches);\r\n\r\n        this.halfWidth = window.innerWidth / 2;\r\n        this.halfHeight = window.innerHeight / 2;\r\n        this.zDistance = htmlStyles.getPropertyValue(\"--z-distance\");\r\n\r\n        if (!isMobile && !this.mouseWatched) {\r\n          this.mouseWatched = true;\r\n          this.el.addEventListener(\"mousemove\", this.onMouseMove);\r\n          this.el.style.setProperty(\r\n            \"--img-prev\",\r\n            `url(${this.images[+this.activeImg[0].dataset.id - 1].src})`\r\n          );\r\n          this.contentEl.style.setProperty(\r\n            \"transform\",\r\n            `translateZ(${this.zDistance})`\r\n          );\r\n        } else if (isMobile && this.mouseWatched) {\r\n          this.mouseWatched = false;\r\n          this.el.removeEventListener(\"mousemove\", this.onMouseMove);\r\n          this.contentEl.style.setProperty(\"transform\", \"none\");\r\n        }\r\n      }\r\n      getMouseCoefficients({ pageX, pageY } = {}) {\r\n        const halfWidth = this.halfWidth;\r\n        const halfHeight = this.halfHeight;\r\n        const xCoeff = ((pageX || this.targetX) - halfWidth) / halfWidth;\r\n        const yCoeff = (halfHeight - (pageY || this.targetY)) / halfHeight;\r\n\r\n        return { xCoeff, yCoeff };\r\n      }\r\n      onMouseMove({ pageX, pageY }) {\r\n        this.targetX = pageX;\r\n        this.targetY = pageY;\r\n\r\n        if (!this.animationRunning) {\r\n          this.animationRunning = true;\r\n          this.runAnimation();\r\n        }\r\n      }\r\n      runAnimation() {\r\n        if (this.animationStopped) {\r\n          this.animationRunning = false;\r\n          return;\r\n        }\r\n\r\n        const maxX = 10;\r\n        const maxY = 10;\r\n\r\n        const newPos = lerp(\r\n          {\r\n            x: this.lastX,\r\n            y: this.lastY,\r\n          },\r\n          {\r\n            x: this.targetX,\r\n            y: this.targetY,\r\n          }\r\n        );\r\n\r\n        const { xCoeff, yCoeff } = this.getMouseCoefficients({\r\n          pageX: newPos.x,\r\n          pageY: newPos.y,\r\n        });\r\n\r\n        this.lastX = newPos.x;\r\n        this.lastY = newPos.y;\r\n\r\n        this.positionImage({ xCoeff, yCoeff });\r\n\r\n        this.contentEl.style.setProperty(\r\n          \"transform\",\r\n          `\r\n      translateZ(${this.zDistance})\r\n      rotateX(${maxY * yCoeff}deg)\r\n      rotateY(${maxX * xCoeff}deg)\r\n    `\r\n        );\r\n\r\n        if (this.reachedFinalPoint) {\r\n          this.animationRunning = false;\r\n        } else {\r\n          requestAnimationFrame(this.runAnimation.bind(this));\r\n        }\r\n      }\r\n      get reachedFinalPoint() {\r\n        const lastX = ~~this.lastX;\r\n        const lastY = ~~this.lastY;\r\n        const targetX = this.targetX;\r\n        const targetY = this.targetY;\r\n\r\n        return (\r\n          (lastX == targetX || lastX - 1 == targetX || lastX + 1 == targetX) &&\r\n          (lastY == targetY || lastY - 1 == targetY || lastY + 1 == targetY)\r\n        );\r\n      }\r\n      positionImage({ xCoeff, yCoeff }) {\r\n        const maxImgOffset = 1;\r\n        const currentImage = this.activeImg[0].children[0];\r\n\r\n        currentImage.style.setProperty(\r\n          \"transform\",\r\n          `\r\n      translateX(${maxImgOffset * -xCoeff}em)\r\n      translateY(${maxImgOffset * yCoeff}em)\r\n    `\r\n        );\r\n      }\r\n      onDotClick({ target }) {\r\n        if (this.inTransit) return;\r\n\r\n        const dot = target.closest(\".slider__nav-dot\");\r\n\r\n        if (!dot) return;\r\n\r\n        const nextId = dot.dataset.id;\r\n        const currentId = this.activeImg[0].dataset.id;\r\n\r\n        if (currentId == nextId) return;\r\n\r\n        this.startTransition(nextId);\r\n      }\r\n      transitionItem(nextId) {\r\n        function onImageTransitionEnd(e) {\r\n          e.stopPropagation();\r\n\r\n          nextImg.classList.remove(transitClass);\r\n\r\n          self.inTransit = false;\r\n\r\n          this.className = imgClass;\r\n          this.removeEventListener(\"transitionend\", onImageTransitionEnd);\r\n        }\r\n\r\n        const self = this;\r\n        const el = this.el;\r\n        const currentImg = this.activeImg[0];\r\n        const currentId = currentImg.dataset.id;\r\n        const imgClass = this.IMG_CLASS;\r\n        const textClass = this.TEXT_CLASS;\r\n        const activeImgClass = this.ACTIVE_IMG_CLASS;\r\n        const activeTextClass = this.ACTIVE_TEXT_CLASS;\r\n        const subActiveClass = `${imgClass}--subactive`;\r\n        const transitClass = `${imgClass}--transit`;\r\n        const nextImg = el.querySelector(`.${imgClass}[data-id='${nextId}']`);\r\n        const nextText = el.querySelector(`.${textClass}[data-id='${nextId}']`);\r\n\r\n        let outClass = \"\";\r\n        let inClass = \"\";\r\n\r\n        this.animationStopped = true;\r\n\r\n        nextText.classList.add(activeTextClass);\r\n\r\n        el.style.setProperty(\"--from-left\", nextId);\r\n\r\n        currentImg.classList.remove(activeImgClass);\r\n        currentImg.classList.add(subActiveClass);\r\n\r\n        if (currentId < nextId) {\r\n          outClass = `${imgClass}--next`;\r\n          inClass = `${imgClass}--prev`;\r\n        } else {\r\n          outClass = `${imgClass}--prev`;\r\n          inClass = `${imgClass}--next`;\r\n        }\r\n\r\n        nextImg.classList.add(outClass);\r\n\r\n        requestAnimationFrame(() => {\r\n          nextImg.classList.add(transitClass, activeImgClass);\r\n          nextImg.classList.remove(outClass);\r\n\r\n          this.animationStopped = false;\r\n          this.positionImage(this.getMouseCoefficients());\r\n\r\n          currentImg.classList.add(transitClass, inClass);\r\n          currentImg.addEventListener(\"transitionend\", onImageTransitionEnd);\r\n        });\r\n\r\n        if (!this.isMobile) this.switchBackgroundImage(nextId);\r\n      }\r\n      startTransition(nextId) {\r\n        function onTextTransitionEnd(e) {\r\n          if (!e.pseudoElement) {\r\n            e.stopPropagation();\r\n\r\n            requestAnimationFrame(() => {\r\n              self.transitionItem(nextId);\r\n            });\r\n\r\n            this.removeEventListener(\"transitionend\", onTextTransitionEnd);\r\n          }\r\n        }\r\n\r\n        if (this.inTransit) return;\r\n\r\n        const activeText = this.activeText[0];\r\n        const backwardsClass = `${this.TEXT_CLASS}--backwards`;\r\n        const self = this;\r\n\r\n        this.inTransit = true;\r\n\r\n        activeText.classList.add(backwardsClass);\r\n        activeText.classList.remove(this.ACTIVE_TEXT_CLASS);\r\n        activeText.addEventListener(\"transitionend\", onTextTransitionEnd);\r\n\r\n        requestAnimationFrame(() => {\r\n          activeText.classList.remove(backwardsClass);\r\n        });\r\n      }\r\n      next() {\r\n        if (this.inTransit) return;\r\n\r\n        let nextId = +this.activeImg[0].dataset.id + 1;\r\n\r\n        if (nextId > this.length) nextId = 1;\r\n\r\n        this.startTransition(nextId);\r\n      }\r\n      prev() {\r\n        if (this.inTransit) return;\r\n\r\n        let nextId = +this.activeImg[0].dataset.id - 1;\r\n\r\n        if (nextId < 1) nextId = this.length;\r\n\r\n        this.startTransition(nextId);\r\n      }\r\n      switchBackgroundImage(nextId) {\r\n        function onBackgroundTransitionEnd(e) {\r\n          if (e.target === this) {\r\n            this.style.setProperty(\"--img-prev\", imageUrl);\r\n            this.classList.remove(bgClass);\r\n            this.removeEventListener(\r\n              \"transitionend\",\r\n              onBackgroundTransitionEnd\r\n            );\r\n          }\r\n        }\r\n\r\n        const bgClass = \"slider--bg-next\";\r\n        const el = this.el;\r\n        const imageUrl = `url(${this.images[+nextId - 1].src})`;\r\n\r\n        el.style.setProperty(\"--img-next\", imageUrl);\r\n        el.addEventListener(\"transitionend\", onBackgroundTransitionEnd);\r\n        el.classList.add(bgClass);\r\n      }\r\n    }\r\n\r\n    const sliderEl = document.getElementById(\"slider\");\r\n    const slider = new Slider(sliderEl);\r\n\r\n    // ------------------ Demo stuff ------------------------ //\r\n\r\n    let timer = 0;\r\n\r\n    function autoSlide() {\r\n      requestAnimationFrame(() => {\r\n        slider.next();\r\n      });\r\n\r\n      timer = setTimeout(autoSlide, 5000);\r\n    }\r\n\r\n    function stopAutoSlide() {\r\n      clearTimeout(timer);\r\n\r\n      this.removeEventListener(\"touchstart\", stopAutoSlide);\r\n      this.removeEventListener(\"mousemove\", stopAutoSlide);\r\n    }\r\n\r\n    sliderEl.addEventListener(\"mousemove\", stopAutoSlide);\r\n    sliderEl.addEventListener(\"touchstart\", stopAutoSlide);\r\n\r\n    timer = setTimeout(autoSlide, 2000);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"homepage2\">\r\n      <div\r\n        className=\"slider\"\r\n        id=\"slider\"\r\n        // style=\"--img-prev:url(https://lh3.googleusercontent.com/aC9nyW5dhaYFmWD8fcf8DApjpH08eHEkbCHqmUPHRQ5T3jK-QyNKZYVMehmrvyPdEA_KxWvgZ3_kyOOYOAv99Ow3UoKSvEloleVKGSfLOwOyDV3Q6Dwi1G-NYoa9-t_ofmmskE6BYnVIOnIz2HWlMcijzIEwvKAL_R4z63DaLgG0z_OcGiSQHunwGAPXrBQUv42ZXuIMODq4zxDHczSxJ72b0-_udtdQK3JuT2X8nXCwFoF7GxmOpzXS0H5f50DuCbXoXcx-O7bgBMCXZdMpTxB27-wdXeLmxpYUySXgjSN2NAKmK16DmGLYvw5tMlrqwb8h4MJEEbXjP1pjPxXsahb7UZseEGyn80uLjATANJvusyJWCtzkkxYXPz-yI1rDvfEJKe2eyA-5AvFlzFBSwBMASn8f7mXinUrXMMREkJQjoi89NfZ91G7253OEVQOqcWxddiYtcHCO5v6Pl3QfV2SUTWXgggscDSY2ezjSPpYERNTXnIM_aCyWmIG7ybrfqOB0eVYBAgynyuPVbjd4KuZWZq2Dfu33HX1RuPKglbOuZGD1QbpJnruvUVkAmjDXI40ENN7X=w1600-h766);\"\r\n      >\r\n        <div className=\"slider__content\" id=\"slider-content\">\r\n          <div className=\"slider__images\">\r\n            <div\r\n              className=\"slider__images-item slider__images-item--active\"\r\n              data-id=\"1\"\r\n            >\r\n              <img\r\n                src=\"https://i.pinimg.com/originals/cf/df/22/cfdf2282a9534e774a47bae5be535ceb.jpg\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"slider__images-item\" data-id=\"2\">\r\n              <img\r\n                src=\"https://img.freepik.com/free-photo/professional-mechanic-uniform-is-check-quality-new-car-engine-oil-before-delivering-customers-while-working-car-repair-center_61243-665.jpg?size=626&ext=jpg&ga=GA1.2.1153051939.1598227200\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"slider__images-item\" data-id=\"3\">\r\n              <img src=\"https://wallpaperaccess.com/full/811596.jpg\" alt=\"\" />\r\n            </div>\r\n            <div className=\"slider__images-item\" data-id=\"4\">\r\n              <img\r\n                src=\"https://cdn.hipwallpaper.com/i/65/55/OCoh1G.jpg\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"slider__images-item\" data-id=\"5\">\r\n              <img src=\"https://wallpaperaccess.com/full/122375.jpg\" alt=\"\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"slider__text\">\r\n            <div\r\n              className=\"slider__text-item slider__text-item--active\"\r\n              data-id=\"1\"\r\n            >\r\n              <div className=\"slider__text-item-head\">\r\n                <h3>Car parts</h3>\r\n              </div>\r\n              <div className=\"slider__text-item-info\">\r\n                <p>“Find the right car part with ease”</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"slider__text-item\" data-id=\"2\">\r\n              <div className=\"slider__text-item-head\">\r\n                <h3>Quality</h3>\r\n              </div>\r\n              <div className=\"slider__text-item-info\">\r\n                <p>“We value quality above all else”</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"slider__text-item\" data-id=\"3\">\r\n              <div className=\"slider__text-item-head\">\r\n                <h3>Variety</h3>\r\n              </div>\r\n              <div className=\"slider__text-item-info\">\r\n                <p>“We have a variety of options for you to explore”</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"slider__text-item\" data-id=\"4\">\r\n              <div className=\"slider__text-item-head\">\r\n                <h3>Technology</h3>\r\n              </div>\r\n              <div className=\"slider__text-item-info\">\r\n                <p>“Futuristic features to enjoy”</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"slider__text-item\" data-id=\"5\">\r\n              <div className=\"slider__text-item-head\">\r\n                <h3>Design</h3>\r\n              </div>\r\n              <div className=\"slider__text-item-info\">\r\n                <p>“Modern design to make you feel at home”</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"slider__nav\">\r\n          <div className=\"slider__nav-arrows\">\r\n            <div\r\n              className=\"slider__nav-arrow slider__nav-arrow--left\"\r\n              id=\"left\"\r\n            >\r\n              to left\r\n            </div>\r\n            <div\r\n              className=\"slider__nav-arrow slider__nav-arrow--right\"\r\n              id=\"right\"\r\n            >\r\n              to right\r\n            </div>\r\n          </div>\r\n          <div className=\"slider__nav-dots\" id=\"slider-dots\">\r\n            <div\r\n              className=\"slider__nav-dot slider__nav-dot--active\"\r\n              data-id=\"1\"\r\n            ></div>\r\n            <div className=\"slider__nav-dot\" data-id=\"2\"></div>\r\n            <div className=\"slider__nav-dot\" data-id=\"3\"></div>\r\n            <div className=\"slider__nav-dot\" data-id=\"4\"></div>\r\n            <div className=\"slider__nav-dot\" data-id=\"5\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\layout\\Homepage\\Homepage.jsx",["72"],"/* eslint-disable no-undef */\r\nimport React, { useEffect } from \"react\";\r\nimport image1 from \"../../assets/Images/13.jpg\";\r\nimport image2 from \"../../assets/Images/14.jpg\";\r\nimport image3 from \"../../assets/Images/15.jpg\";\r\nimport image4 from \"../../assets/Images/16.jpg\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport default function Homepage() {\r\n    useEffect(() => {\r\n        \r\n{\r\n\tfunction debounce(func, wait, immediate) {\r\n\t\tvar timeout;\r\n\t\treturn function() {\r\n\t\t\tvar context = this, args = arguments;\r\n\t\t\tvar later = function() {\r\n\t\t\t\ttimeout = null;\r\n\t\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t\t};\r\n\t\t\tvar callNow = immediate && !timeout;\r\n\t\t\tclearTimeout(timeout);\r\n\t\t\ttimeout = setTimeout(later, wait);\r\n\t\t\tif (callNow) func.apply(context, args);\r\n\t\t};\r\n    };\r\n    \r\n    class Slideshow {\r\n        constructor(el) {\r\n            this.DOM = {};\r\n            this.DOM.el = el;\r\n            this.settings = {\r\n                animation: {\r\n                    slides: {\r\n                        duration: 500,\r\n                        easing: 'easeOutQuint'\r\n                    },\r\n                    shape: {\r\n                        duration: 300,\r\n                        easing: {in: 'easeOutQuint', out: 'easeOutQuad'}\r\n                    }\r\n                },\r\n                frameFill: 'url(#gradient1)'\r\n            }\r\n            this.init();\r\n        }\r\n        init() {\r\n            this.DOM.slides = Array.from(this.DOM.el.querySelectorAll('.slides--images > .slide'));\r\n            this.slidesTotal = this.DOM.slides.length;\r\n            this.DOM.nav = this.DOM.el.querySelector('.slidenav');\r\n            this.DOM.titles = this.DOM.el.querySelector('.slides--titles');\r\n            this.DOM.titlesSlides = Array.from(this.DOM.titles.querySelectorAll('.slide'));\r\n            this.DOM.nextCtrl = this.DOM.nav.querySelector('.slidenav__item--next');\r\n            this.DOM.prevCtrl = this.DOM.nav.querySelector('.slidenav__item--prev');\r\n            this.current = 0;\r\n            this.createFrame(); \r\n            this.initEvents();\r\n        }\r\n        createFrame() {\r\n            this.rect = this.DOM.el.getBoundingClientRect();\r\n            this.frameSize = this.rect.width/12;\r\n            this.paths = {\r\n                initial: this.calculatePath('initial'),\r\n                final: this.calculatePath('final')\r\n            };\r\n            this.DOM.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n            this.DOM.svg.setAttribute('class', 'shape');\r\n            this.DOM.svg.setAttribute('width','100%');\r\n            this.DOM.svg.setAttribute('height','100%');\r\n            this.DOM.svg.setAttribute('viewbox',`0 0 ${this.rect.width} ${this.rect.height}`);\r\n            this.DOM.svg.innerHTML = `\r\n            <defs>\r\n            <linearGradient id=\"gradient1\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n                <stop offset=\"0%\" stop-color=\"#09012d\"/>\r\n                <stop offset=\"100%\" stop-color=\"#0f2b73\"/>\r\n            </linearGradient>\r\n            </defs>\r\n            <path fill=\"${this.settings.frameFill}\" d=\"${this.paths.initial}\"/>`;\r\n            this.DOM.el.insertBefore(this.DOM.svg, this.DOM.titles);\r\n            this.DOM.shape = this.DOM.svg.querySelector('path');\r\n        }\r\n        updateFrame() {\r\n            this.paths.initial = this.calculatePath('initial');\r\n            this.paths.final = this.calculatePath('final');\r\n            this.DOM.svg.setAttribute('viewbox',`0 0 ${this.rect.width} ${this.rect.height}`);\r\n            this.DOM.shape.setAttribute('d', this.isAnimating ? this.paths.final : this.paths.initial);\r\n        }\r\n        calculatePath(path = 'initial') {\r\n\r\n            if ( path === 'initial' ) {\r\n                return `M 0,0 0,${this.rect.height} ${this.rect.width},${this.rect.height} ${this.rect.width},0 0,0 Z M 0,0 ${this.rect.width},0 ${this.rect.width},${this.rect.height} 0,${this.rect.height} Z`;\r\n            }\r\n            else {\r\n                const point1 = {x: this.rect.width/4-50, y: this.rect.height/4+50};\r\n                const point2 = {x: this.rect.width/4+50, y: this.rect.height/4-50};\r\n                const point3 = {x: this.rect.width-point2.x, y: this.rect.height-point2.y};\r\n                const point4 = {x: this.rect.width-point1.x, y: this.rect.height-point1.y};\r\n\r\n                return `M 0,0 0,${this.rect.height} ${this.rect.width},${this.rect.height} ${this.rect.width},0 0,0 Z M ${point1.x},${point1.y} ${point2.x},${point2.y} ${point4.x},${point4.y} ${point3.x},${point3.y} Z`;\r\n            }\r\n        }\r\n        initEvents() {\r\n            this.DOM.nextCtrl.addEventListener('click', () => this.navigate('next'));\r\n            this.DOM.prevCtrl.addEventListener('click', () => this.navigate('prev'));\r\n            \r\n            window.addEventListener('resize', debounce(() => {\r\n                this.rect = this.DOM.el.getBoundingClientRect();\r\n                this.updateFrame();\r\n            }, 20));\r\n            \r\n            document.addEventListener('keydown', (ev) => {\r\n                const keyCode = ev.keyCode || ev.which;\r\n                if ( keyCode === 37 ) {\r\n                    this.navigate('prev');\r\n                }\r\n                else if ( keyCode === 39 ) {\r\n                    this.navigate('next');\r\n                }\r\n            });\r\n        }\r\n        navigate(dir = 'next') {\r\n            if ( this.isAnimating ) return false;\r\n            this.isAnimating = true;\r\n\r\n            const animateShapeIn = anime({\r\n                targets: this.DOM.shape,\r\n                duration: this.settings.animation.shape.duration,\r\n                easing: this.settings.animation.shape.easing.in,\r\n                d: this.paths.final\r\n            });\r\n\r\n            const animateSlides = () => {\r\n                return new Promise((resolve, reject) => {\r\n                    const currentSlide = this.DOM.slides[this.current];\r\n                    anime({\r\n                        targets: currentSlide,\r\n                        duration: this.settings.animation.slides.duration,\r\n                        easing: this.settings.animation.slides.easing,\r\n                        translateY: dir === 'next' ? this.rect.height : -1*this.rect.height,\r\n                        complete: () => {\r\n                            currentSlide.classList.remove('slide--current');\r\n                            resolve();\r\n                        }\r\n                    });\r\n\r\n                    const currentTitleSlide = this.DOM.titlesSlides[this.current];\r\n                    anime({\r\n                        targets: currentTitleSlide.children,\r\n                        duration: this.settings.animation.slides.duration,\r\n                        easing: this.settings.animation.slides.easing,\r\n                        delay: (t,i,total) => dir === 'next' ? i*100 : (total-i-1)*100,\r\n                        translateY: [0, dir === 'next' ? 100 : -100],\r\n                        opacity: [1,0],\r\n                        complete: () => {\r\n                            currentTitleSlide.classList.remove('slide--current');\r\n                            resolve();\r\n                        }\r\n                    });\r\n        \r\n                    this.current = dir === 'next' ? \r\n                        this.current < this.slidesTotal-1 ? this.current + 1 : 0 :\r\n                        this.current > 0 ? this.current - 1 : this.slidesTotal-1; \r\n                    \r\n                    const newSlide = this.DOM.slides[this.current];\r\n                    newSlide.classList.add('slide--current');\r\n                    anime({\r\n                        targets: newSlide,\r\n                        duration: this.settings.animation.slides.duration,\r\n                        easing: this.settings.animation.slides.easing,\r\n                        translateY: [dir === 'next' ? -1*this.rect.height : this.rect.height,0]\r\n                    });\r\n        \r\n                    const newSlideImg = newSlide.querySelector('.slide__img');\r\n                    \r\n                    anime.remove(newSlideImg);\r\n                    anime({\r\n                        targets: newSlideImg,\r\n                        duration: this.settings.animation.slides.duration*3,\r\n                        easing: this.settings.animation.slides.easing,\r\n                        translateY: [dir === 'next' ? -100 : 100, 0],\r\n                        scale: [0.2,1]\r\n                    });\r\n                    \r\n                    const newTitleSlide = this.DOM.titlesSlides[this.current];\r\n                    newTitleSlide.classList.add('slide--current');\r\n                    anime({\r\n                        targets: newTitleSlide.children,\r\n                        duration: this.settings.animation.slides.duration*1.5,\r\n                        easing: this.settings.animation.slides.easing,\r\n                        delay: (t,i,total) => dir === 'next' ? i*100+100 : (total-i-1)*100+100,\r\n                        translateY: [dir === 'next' ? -100 : 100 ,0],\r\n                        opacity: [0,1]\r\n                    });\r\n                });\r\n            };\r\n\r\n            const animateShapeOut = () => {\r\n                anime({\r\n                    targets: this.DOM.shape,\r\n                    duration: this.settings.animation.shape.duration,\r\n                    easing: this.settings.animation.shape.easing.out,\r\n                    d: this.paths.initial,\r\n                    complete: () => this.isAnimating = false\r\n                });\r\n            }\r\n\r\n            animateShapeIn.finished.then(animateSlides).then(animateShapeOut);\r\n        }\r\n    };\r\n\r\n    new Slideshow(document.querySelector('.slideshow'));\r\n    imagesLoaded('.slide__img', { background: true }, () => document.body.classList.remove('loading'));\r\n};\r\n    }, [])\r\n  return (\r\n    <div className=\"homePage\">\r\n      <section className=\"demo-6 loading\">\r\n        {/* <!-- <svg className=\"hidden\">\r\n          <symbol id=\"icon-arrow\" viewBox=\"0 0 24 24\">\r\n              <title>arrow</title>\r\n              <polygon points=\"6.3,12.8 20.9,12.8 20.9,11.2 6.3,11.2 10.2,7.2 9,6 3.1,12 9,18 10.2,16.8 \" />\r\n          </symbol>\r\n          <symbol id=\"icon-drop\" viewBox=\"0 0 24 24\">\r\n              <title>drop</title>\r\n              <path\r\n                  d=\"M12,21c-3.6,0-6.6-3-6.6-6.6C5.4,11,10.8,4,11.4,3.2C11.6,3.1,11.8,3,12,3s0.4,0.1,0.6,0.3c0.6,0.8,6.1,7.8,6.1,11.2C18.6,18.1,15.6,21,12,21zM12,4.8c-1.8,2.4-5.2,7.4-5.2,9.6c0,2.9,2.3,5.2,5.2,5.2s5.2-2.3,5.2-5.2C17.2,12.2,13.8,7.3,12,4.8z\" />\r\n              <path\r\n                  d=\"M12,18.2c-0.4,0-0.7-0.3-0.7-0.7s0.3-0.7,0.7-0.7c1.3,0,2.4-1.1,2.4-2.4c0-0.4,0.3-0.7,0.7-0.7c0.4,0,0.7,0.3,0.7,0.7C15.8,16.5,14.1,18.2,12,18.2z\" />\r\n          </symbol>\r\n          <symbol id=\"icon-github\" viewBox=\"0 0 32.6 31.8\">\r\n              <title>github</title>\r\n              <path\r\n                  d=\"M16.3,0C7.3,0,0,7.3,0,16.3c0,7.2,4.7,13.3,11.1,15.5c0.8,0.1,1.1-0.4,1.1-0.8c0-0.4,0-1.4,0-2.8c-4.5,1-5.5-2.2-5.5-2.2c-0.7-1.9-1.8-2.4-1.8-2.4c-1.5-1,0.1-1,0.1-1c1.6,0.1,2.5,1.7,2.5,1.7c1.5,2.5,3.8,1.8,4.7,1.4c0.1-1.1,0.6-1.8,1-2.2c-3.6-0.4-7.4-1.8-7.4-8.1c0-1.8,0.6-3.2,1.7-4.4C7.4,10.7,6.8,9,7.7,6.8c0,0,1.4-0.4,4.5,1.7c1.3-0.4,2.7-0.5,4.1-0.5c1.4,0,2.8,0.2,4.1,0.5c3.1-2.1,4.5-1.7,4.5-1.7c0.9,2.2,0.3,3.9,0.2,4.3c1,1.1,1.7,2.6,1.7,4.4c0,6.3-3.8,7.6-7.4,8c0.6,0.5,1.1,1.5,1.1,3c0,2.2,0,3.9,0,4.5c0,0.4,0.3,0.9,1.1,0.8c6.5-2.2,11.1-8.3,11.1-15.5C32.6,7.3,25.3,0,16.3,0z\" />\r\n          </symbol>\r\n      </svg> --> */}\r\n        {/* <div className=\"content content--fixed\"> */}\r\n        {/* <!-- <header className=\"codrops-header\">\r\n                  <div className=\"codrops-links\">\r\n                      <a className=\"codrops-icon codrops-icon--prev\"\r\n                          href=\"https://tympanus.net/Development/ExpandingGridItemAnimation/\" title=\"Previous Demo\"><svg\r\n                              className=\"icon icon--arrow\">\r\n                              <use xlink:href=\"#icon-arrow\"></use>\r\n                          </svg></a>\r\n                      <a className=\"codrops-icon codrops-icon--drop\" href=\"https://tympanus.net/codrops/?p=33037\"\r\n                          title=\"Back to the article\"><svg className=\"icon icon--drop\">\r\n                              <use xlink:href=\"#icon-drop\"></use>\r\n                          </svg></a>\r\n                  </div>\r\n                  <h1 className=\"codrops-header__title\">Animated Frame Slideshow</h1>\r\n              </header>\r\n              <a className=\"github\" href=\"https://github.com/codrops/AnimatedFrameSlideshow/\"\r\n                  title=\"Find this project on GitHub\"><svg className=\"icon icon--github\">\r\n                      <use xlink:href=\"#icon-github\"></use>\r\n                  </svg></a> --> */}\r\n        {/* <!-- <nav className=\"demos\">\r\n                  <svg className=\"icon icon--keyboard\">\r\n                      <use xlink:href=\"#icon-keyboard\"></use>\r\n                  </svg>\r\n                  <a className=\"demo\" href=\"index.html\"><span>Demo 1</span></a>\r\n                  <a className=\"demo\" href=\"index2.html\"><span>Demo 2</span></a>\r\n                  <a className=\"demo\" href=\"index3.html\"><span>Demo 3</span></a>\r\n                  <a className=\"demo\" href=\"index4.html\"><span>Demo 4</span></a>\r\n                  <a className=\"demo\" href=\"index5.html\"><span>Demo 5</span></a>\r\n                  <a className=\"demo demo--current\" href=\"index6.html\"><span>Demo 6</span></a>\r\n              </nav> --> */}\r\n\r\n        {/* <!-- --------------------------- ADS ---------------------- --> */}\r\n        {/* <a\r\n            href=\"http://go.thoughtleaders.io/SenchaCodrops141117\"\r\n            rel=\"nofollow\"\r\n            className=\"pater\"\r\n            onClick=\"recordOutboundLink(this, 'Outbound Links', 'SenchaCodrops141117');return false;\"\r\n          >\r\n            <img\r\n              className=\"pater__logo\"\r\n              src=\"../../../../assets/Images/logo.svg\"\r\n              alt=\"Sencha Logo\"\r\n            />\r\n            <h2 className=\"pater__title\">\r\n              Sencha Ext JS: Build an App, Not a Framework\r\n            </h2>\r\n            <div className=\"pater__img-wrap\">\r\n              <img\r\n                className=\"pater__img\"\r\n                src=\"../../../../assets/Images/sencha.png\"\r\n                alt=\"Sencha Creative\"\r\n              />\r\n            </div>\r\n          </a>\r\n        </div> */}\r\n\r\n        {/* <!-- ----------------------Slide show+---- --> */}\r\n        <div className=\"slideshow\">\r\n          <div className=\"slides slides--images\">\r\n            <div className=\"slide slide--current\">\r\n              <div\r\n                className=\"slide__img\"\r\n                style={{\r\n                  backgroundImage: `url(${image1})`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"slide\">\r\n              <div\r\n                className=\"slide__img\"\r\n                style={{\r\n                  backgroundImage: `url(${image2})`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"slide\">\r\n              <div\r\n                className=\"slide__img\"\r\n                style={{\r\n                  backgroundImage: `url(${image3})`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"slide\">\r\n              <div\r\n                className=\"slide__img\"\r\n                style={{\r\n                  backgroundImage: `url(${image4})`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"slides slides--titles\">\r\n            <div className=\"slide slide--current\">\r\n              <h2 className=\"slide__title\">Innovate</h2>\r\n            </div>\r\n            <div className=\"slide\">\r\n              <h2 className=\"slide__title\">Discover</h2>\r\n            </div>\r\n            <div className=\"slide\">\r\n              <h2 className=\"slide__title\">Design</h2>\r\n            </div>\r\n            <div className=\"slide\">\r\n              <h2 className=\"slide__title\">Create</h2>\r\n            </div>\r\n            <div className=\"slide\">\r\n              <h2 className=\"slide__title\">Invent</h2>\r\n            </div>\r\n          </div>\r\n          <nav className=\"slidenav mb-5\">\r\n            <button className=\"slidenav__item slidenav__item--prev\">\r\n              Previous\r\n            </button>\r\n            <span>/</span>\r\n            <button className=\"slidenav__item slidenav__item--next\">\r\n              Next\r\n            </button>\r\n          </nav>\r\n        </div>\r\n      </section>\r\n      {/* <Helmet>\r\n        <script type=\"text/javascript\" src=\"../../assets/scripts/demo.js\" />\r\n        <script\r\n          type=\"text/javascript\"\r\n          src=\"../../assets/scripts/imagesloaded.pkgd.min.js\"\r\n        />\r\n        <script\r\n          type=\"text/javascript\"\r\n          src=\"../../assets/scripts/anime.min.js\"\r\n        />\r\n        <script type=\"text/javascript\" src=\"../../assets/scripts/demo6.js\" />\r\n        <script type=\"text/javascript\" src=\"../../assets/scripts/custom.js\" />\r\n      </Helmet> */}\r\n    </div>\r\n  );\r\n}\r\n","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\pages\\user\\authentication\\login\\Login.jsx",["73","74"],"import React from 'react'\r\n\r\nexport default function Login() {\r\n    return (\r\n      <section className=\"login-component\">\r\n        <div className=\"container jumbotron login-wrapper jagged-edges\">\r\n          <div className=\"right-style\"></div>\r\n          <div className=\"left-style\"></div>\r\n          <div className=\"row pr-4 pl-4\">\r\n            <div className=\"col-md-6\">\r\n              <img\r\n                src=\"https://html.merku.love/rotors/assets/images/about/img_03.jpg\"\r\n                style={{ width: \"100%\" }}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <h2>Login</h2>or{\" \"}\r\n              <span>\r\n                <a routerLink=\"/signup\">Create Account</a>\r\n              </span>\r\n              {/* <!-- Login Form --> */}\r\n              {/* <form [formGroup]=\"form\"> */}\r\n              <form>\r\n                <label>\r\n                  <input\r\n                    type=\"email\"\r\n                    formControlName=\"Email\"\r\n                    className=\"form-control\"\r\n                    name=\"login\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                </label>\r\n\r\n                {/* <div *ngIf=\"form.controls['Email'].dirty && form.controls['Email'].touched\">\r\n                <small className=\"text-danger\" *ngIf=\"form.controls['Email'].hasError('required')\">You Should Enter Email address</small>\r\n                <small className=\"text-danger\" *ngIf=\"form.controls['Email'].hasError('pattern')\">Email address is invalid format</small>\r\n              </div> */}\r\n\r\n                <br />\r\n                <label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"login\"\r\n                    placeholder=\"password\"\r\n                  />\r\n                </label>\r\n                <br />\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-danger\"\r\n                  style={{ width: \"100%\" }}\r\n                  value=\"Log In\"\r\n                />\r\n              </form>\r\n              <br />\r\n              <a href=\"#\">Forget Password</a>\r\n              <br />\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">Login with</div>\r\n                <div className=\"col-md-8\">\r\n                  <button\r\n                    className=\"btn btn-danger mr-1\"\r\n                    style={{ width: \"40%\" }}\r\n                  >\r\n                    Google\r\n                  </button>\r\n                  <button className=\"btn btn-primary\" style={{ width: \"40%\" }}>\r\n                    Facebook\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\n","E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\pages\\user\\authentication\\AuthRoutes.jsx",[],"E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\pages\\user\\authentication\\logout\\Logout.jsx",[],"E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\pages\\user\\authentication\\resetPassword\\ResetPassword.jsx",[],"E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\pages\\user\\authentication\\signUp\\SignUp.jsx",[],"E:\\GitHub Projects\\Graduation-project\\CarReact\\car-react\\src\\pages\\user\\authentication\\signform\\signform.jsx",["75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":16},{"ruleId":"80","severity":1,"message":"84","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":17},{"ruleId":"80","severity":1,"message":"85","line":4,"column":7,"nodeType":"82","messageId":"83","endLine":4,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":147,"column":18,"nodeType":"88","messageId":"89","endLine":147,"endColumn":20},{"ruleId":"86","severity":1,"message":"87","line":147,"column":42,"nodeType":"88","messageId":"89","endLine":147,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":147,"column":66,"nodeType":"88","messageId":"89","endLine":147,"endColumn":68},{"ruleId":"86","severity":1,"message":"87","line":148,"column":18,"nodeType":"88","messageId":"89","endLine":148,"endColumn":20},{"ruleId":"86","severity":1,"message":"87","line":148,"column":42,"nodeType":"88","messageId":"89","endLine":148,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":148,"column":66,"nodeType":"88","messageId":"89","endLine":148,"endColumn":68},{"ruleId":"86","severity":1,"message":"87","line":173,"column":23,"nodeType":"88","messageId":"89","endLine":173,"endColumn":25},{"ruleId":"80","severity":1,"message":"90","line":7,"column":10,"nodeType":"82","messageId":"83","endLine":7,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":20,"column":17,"nodeType":"93","endLine":20,"endColumn":41},{"ruleId":"91","severity":1,"message":"94","line":58,"column":15,"nodeType":"93","endLine":58,"endColumn":27},{"ruleId":"91","severity":1,"message":"94","line":58,"column":25,"nodeType":"93","endLine":58,"endColumn":37},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'Homepage' is defined but never used.","Identifier","unusedVar","'Homepage2' is defined but never used.","'AuthRoutes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Helmet' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]