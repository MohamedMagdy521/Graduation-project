{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\J0E\\\\Programming\\\\ITI-Graduation-Project\\\\CarReact\\\\car-react\\\\src\\\\components\\\\Dropdown.jsx\";\nimport React from \"react\";\nexport default function Dropdown(props) {\n  const inputField = document.querySelector(\".chosen-value\");\n  const dropdown = document.querySelector(\".value-list\");\n  const dropdownArray = [...document.querySelectorAll(\"li\")];\n  console.log(typeof dropdownArray);\n  dropdown.classList.add(\"open\");\n  inputField.focus(); // Demo purposes only\n\n  let valueArray = [];\n  dropdownArray.forEach(item => {\n    valueArray.push(item.textContent);\n  }); // const closeDropdown = () => {\n  //   dropdown.classList.remove(\"open\");\n  // };\n\n  inputField.addEventListener(\"input\", () => {\n    dropdown.classList.add(\"open\");\n    let inputValue = inputField.value.toLowerCase();\n    let valueSubstring;\n\n    if (inputValue.length > 0) {\n      for (let j = 0; j < valueArray.length; j++) {\n        if (!(inputValue.substring(0, inputValue.length) === valueArray[j].substring(0, inputValue.length).toLowerCase())) {\n          dropdownArray[j].classList.add(\"closed\");\n        } else {\n          dropdownArray[j].classList.remove(\"closed\");\n        }\n      }\n    } else {\n      for (let i = 0; i < dropdownArray.length; i++) {\n        dropdownArray[i].classList.remove(\"closed\");\n      }\n    }\n  });\n  dropdownArray.forEach(item => {\n    item.addEventListener(\"click\", evt => {\n      inputField.value = item.textContent;\n      dropdownArray.forEach(dropdown => {\n        dropdown.classList.add(\"closed\");\n      });\n    });\n  });\n  inputField.addEventListener(\"focus\", () => {\n    inputField.placeholder = \"Type to filter\";\n    dropdown.classList.add(\"open\");\n    dropdownArray.forEach(dropdown => {\n      dropdown.classList.remove(\"closed\");\n    });\n  });\n  inputField.addEventListener(\"blur\", () => {\n    inputField.placeholder = \"Select state\";\n    dropdown.classList.remove(\"open\");\n  });\n  document.addEventListener(\"click\", evt => {\n    const isDropdown = dropdown.contains(evt.target);\n    const isInput = inputField.contains(evt.target);\n\n    if (!isDropdown && !isInput) {\n      dropdown.classList.remove(\"open\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdownn\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"chosen-value\",\n        type: \"text\",\n        value: \"\",\n        placeholder: \"Type to filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"value-list\",\n        children: props.mapItems.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_c = Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["D:/J0E/Programming/ITI-Graduation-Project/CarReact/car-react/src/components/Dropdown.jsx"],"names":["React","Dropdown","props","inputField","document","querySelector","dropdown","dropdownArray","querySelectorAll","console","log","classList","add","focus","valueArray","forEach","item","push","textContent","addEventListener","inputValue","value","toLowerCase","valueSubstring","length","j","substring","remove","i","evt","placeholder","isDropdown","contains","target","isInput","mapItems","map","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEtC,QAAMC,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAAnB;AACA,QAAMC,QAAQ,GAAGF,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAjB;AACA,QAAME,aAAa,GAAG,CAAC,GAAGH,QAAQ,CAACI,gBAAT,CAA0B,IAA1B,CAAJ,CAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,aAAnB;AACAD,EAAAA,QAAQ,CAACK,SAAT,CAAmBC,GAAnB,CAAuB,MAAvB;AACAT,EAAAA,UAAU,CAACU,KAAX,GAPsC,CAOlB;;AACpB,MAAIC,UAAU,GAAG,EAAjB;AACAP,EAAAA,aAAa,CAACQ,OAAd,CAAuBC,IAAD,IAAU;AAC9BF,IAAAA,UAAU,CAACG,IAAX,CAAgBD,IAAI,CAACE,WAArB;AACD,GAFD,EATsC,CAatC;AACA;AACA;;AAEAf,EAAAA,UAAU,CAACgB,gBAAX,CAA4B,OAA5B,EAAqC,MAAM;AACzCb,IAAAA,QAAQ,CAACK,SAAT,CAAmBC,GAAnB,CAAuB,MAAvB;AACA,QAAIQ,UAAU,GAAGjB,UAAU,CAACkB,KAAX,CAAiBC,WAAjB,EAAjB;AACA,QAAIC,cAAJ;;AACA,QAAIH,UAAU,CAACI,MAAX,GAAoB,CAAxB,EAA2B;AACzB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,UAAU,CAACU,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AAC1C,YACE,EACEL,UAAU,CAACM,SAAX,CAAqB,CAArB,EAAwBN,UAAU,CAACI,MAAnC,MACAV,UAAU,CAACW,CAAD,CAAV,CAAcC,SAAd,CAAwB,CAAxB,EAA2BN,UAAU,CAACI,MAAtC,EAA8CF,WAA9C,EAFF,CADF,EAKE;AACAf,UAAAA,aAAa,CAACkB,CAAD,CAAb,CAAiBd,SAAjB,CAA2BC,GAA3B,CAA+B,QAA/B;AACD,SAPD,MAOO;AACLL,UAAAA,aAAa,CAACkB,CAAD,CAAb,CAAiBd,SAAjB,CAA2BgB,MAA3B,CAAkC,QAAlC;AACD;AACF;AACF,KAbD,MAaO;AACL,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,aAAa,CAACiB,MAAlC,EAA0CI,CAAC,EAA3C,EAA+C;AAC7CrB,QAAAA,aAAa,CAACqB,CAAD,CAAb,CAAiBjB,SAAjB,CAA2BgB,MAA3B,CAAkC,QAAlC;AACD;AACF;AACF,GAtBD;AAwBApB,EAAAA,aAAa,CAACQ,OAAd,CAAuBC,IAAD,IAAU;AAC9BA,IAAAA,IAAI,CAACG,gBAAL,CAAsB,OAAtB,EAAgCU,GAAD,IAAS;AACtC1B,MAAAA,UAAU,CAACkB,KAAX,GAAmBL,IAAI,CAACE,WAAxB;AACAX,MAAAA,aAAa,CAACQ,OAAd,CAAuBT,QAAD,IAAc;AAClCA,QAAAA,QAAQ,CAACK,SAAT,CAAmBC,GAAnB,CAAuB,QAAvB;AACD,OAFD;AAGD,KALD;AAMD,GAPD;AASAT,EAAAA,UAAU,CAACgB,gBAAX,CAA4B,OAA5B,EAAqC,MAAM;AACzChB,IAAAA,UAAU,CAAC2B,WAAX,GAAyB,gBAAzB;AACAxB,IAAAA,QAAQ,CAACK,SAAT,CAAmBC,GAAnB,CAAuB,MAAvB;AACAL,IAAAA,aAAa,CAACQ,OAAd,CAAuBT,QAAD,IAAc;AAClCA,MAAAA,QAAQ,CAACK,SAAT,CAAmBgB,MAAnB,CAA0B,QAA1B;AACD,KAFD;AAGD,GAND;AAQAxB,EAAAA,UAAU,CAACgB,gBAAX,CAA4B,MAA5B,EAAoC,MAAM;AACxChB,IAAAA,UAAU,CAAC2B,WAAX,GAAyB,cAAzB;AACAxB,IAAAA,QAAQ,CAACK,SAAT,CAAmBgB,MAAnB,CAA0B,MAA1B;AACD,GAHD;AAKAvB,EAAAA,QAAQ,CAACe,gBAAT,CAA0B,OAA1B,EAAoCU,GAAD,IAAS;AAC1C,UAAME,UAAU,GAAGzB,QAAQ,CAAC0B,QAAT,CAAkBH,GAAG,CAACI,MAAtB,CAAnB;AACA,UAAMC,OAAO,GAAG/B,UAAU,CAAC6B,QAAX,CAAoBH,GAAG,CAACI,MAAxB,CAAhB;;AACA,QAAI,CAACF,UAAD,IAAe,CAACG,OAApB,EAA6B;AAC3B5B,MAAAA,QAAQ,CAACK,SAAT,CAAmBgB,MAAnB,CAA0B,MAA1B;AACD;AACF,GAND;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAA,8BACE;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAC,EAHR;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAI,QAAA,KAAK,EAAC,YAAV;AAAA,kBACGzB,KAAK,CAACiC,QAAN,CAAeC,GAAf,CAAmB,CAACpB,IAAD,EAAOqB,KAAP,KAAiB;AACnC,8BAAO;AAAA,sBAAiBrB;AAAjB,aAASqB,KAAT;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;KAxHuBpC,Q","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Dropdown(props) {\r\n\r\n  const inputField = document.querySelector(\".chosen-value\");\r\n  const dropdown = document.querySelector(\".value-list\");\r\n  const dropdownArray = [...document.querySelectorAll(\"li\")];\r\n  console.log(typeof dropdownArray);\r\n  dropdown.classList.add(\"open\");\r\n  inputField.focus(); // Demo purposes only\r\n  let valueArray = [];\r\n  dropdownArray.forEach((item) => {\r\n    valueArray.push(item.textContent);\r\n  });\r\n\r\n  // const closeDropdown = () => {\r\n  //   dropdown.classList.remove(\"open\");\r\n  // };\r\n\r\n  inputField.addEventListener(\"input\", () => {\r\n    dropdown.classList.add(\"open\");\r\n    let inputValue = inputField.value.toLowerCase();\r\n    let valueSubstring;\r\n    if (inputValue.length > 0) {\r\n      for (let j = 0; j < valueArray.length; j++) {\r\n        if (\r\n          !(\r\n            inputValue.substring(0, inputValue.length) ===\r\n            valueArray[j].substring(0, inputValue.length).toLowerCase()\r\n          )\r\n        ) {\r\n          dropdownArray[j].classList.add(\"closed\");\r\n        } else {\r\n          dropdownArray[j].classList.remove(\"closed\");\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < dropdownArray.length; i++) {\r\n        dropdownArray[i].classList.remove(\"closed\");\r\n      }\r\n    }\r\n  });\r\n\r\n  dropdownArray.forEach((item) => {\r\n    item.addEventListener(\"click\", (evt) => {\r\n      inputField.value = item.textContent;\r\n      dropdownArray.forEach((dropdown) => {\r\n        dropdown.classList.add(\"closed\");\r\n      });\r\n    });\r\n  });\r\n\r\n  inputField.addEventListener(\"focus\", () => {\r\n    inputField.placeholder = \"Type to filter\";\r\n    dropdown.classList.add(\"open\");\r\n    dropdownArray.forEach((dropdown) => {\r\n      dropdown.classList.remove(\"closed\");\r\n    });\r\n  });\r\n\r\n  inputField.addEventListener(\"blur\", () => {\r\n    inputField.placeholder = \"Select state\";\r\n    dropdown.classList.remove(\"open\");\r\n  });\r\n\r\n  document.addEventListener(\"click\", (evt) => {\r\n    const isDropdown = dropdown.contains(evt.target);\r\n    const isInput = inputField.contains(evt.target);\r\n    if (!isDropdown && !isInput) {\r\n      dropdown.classList.remove(\"open\");\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"dropdownn\">\r\n      <form>\r\n        <input\r\n          class=\"chosen-value\"\r\n          type=\"text\"\r\n          value=\"\"\r\n          placeholder=\"Type to filter\"\r\n        />\r\n        <ul class=\"value-list\">\r\n          {props.mapItems.map((item, index) => {\r\n            return <li key={index}>{item}</li>;\r\n          })}\r\n        </ul>\r\n      </form>\r\n      {/* <div className=\"select-box__current w-100\" tabindex=\"0\">\r\n        {props.mapItems.map((item, index) => {\r\n          return (\r\n            <div className=\"select-box__value\">\r\n              <input\r\n                className=\"select-box__input\"\r\n                type=\"radio\"\r\n                id={item + index}\r\n                value={item}\r\n                name={props.name}\r\n                checked=\"checked\"\r\n              />\r\n              <p className=\"select-box__input-text\">{item}</p>\r\n            </div>\r\n          );\r\n        })}\r\n        <img\r\n          className=\"select-box__icon\"\r\n          src=\"http://cdn.onlinewebfonts.com/svg/img_295694.svg\"\r\n          alt=\"Arrow Icon\"\r\n        />\r\n      </div>\r\n      <ul className=\"select-box__list\">\r\n        {props.mapItems.map((item, index) => {\r\n          return (\r\n            <li>\r\n              <label className=\"select-box__option\" for={item + index}>\r\n                {item}\r\n              </label>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}