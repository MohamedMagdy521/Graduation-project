{"ast":null,"code":"import * as TYPES from './types';\nimport axios from 'axios'; // export const setLanguage = (payload) => {\n//   return {\n//     type: TYPES.SITE_LANG,\n//     payload,\n//   };\n// };\n// products requests -----------------------\n\nexport const getProductsAction = () => async dispatch => {\n  try {\n    const res = await axios.get('https://fakestoreapi.com/products');\n    console.log(res);\n    dispatch({\n      type: TYPES.GET_PRODUCTS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; // blog requests -------------------------\n\nexport const getBlogsAction = () => async dispatch => {\n  try {\n    const res = await axios.get(\"https://fakestoreapi.com/products\");\n    console.log(res);\n    dispatch({\n      type: TYPES.GET_BLOGS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const AddBlogsAction = () => async dispatch => {\n  try {\n    const req = await axios.post(\"https://fakestoreapi.com/products\");\n    console.log(req);\n    dispatch({\n      type: TYPES.ADD_BLOG,\n      payload: req.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; // get user -----------------------\n\nexport const getUsersAction = () => async dispatch => {\n  try {\n    const res = await axios.get(\"https://fakestoreapi.com/users\");\n    console.log(res);\n    dispatch({\n      type: TYPES.GET_USER,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const addUserAction = () => async dispatch => {\n  try {\n    const req = await axios.post(\"https://fakestoreapi.com/users\");\n    console.log(req);\n    dispatch({\n      type: TYPES.ADD_USER,\n      payload: req.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/J0E/Programming/ITI-Graduation-Project/CarReact/car-react/src/store/actions.js"],"names":["TYPES","axios","getProductsAction","dispatch","res","get","console","log","type","GET_PRODUCTS","payload","data","error","getBlogsAction","GET_BLOGS","AddBlogsAction","req","post","ADD_BLOG","getUsersAction","GET_USER","addUserAction","ADD_USER"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAOC,QAAP,IAAmB;AACtD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,mCAAV,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAD,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAER,KAAK,CAACS,YADP;AAELC,MAAAA,OAAO,EAAEN,GAAG,CAACO;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AACJ,CAXM,C,CAaP;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOV,QAAP,IAAoB;AACtD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,mCAAV,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAD,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAER,KAAK,CAACc,SADL;AAEPJ,MAAAA,OAAO,EAAEN,GAAG,CAACO;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD;AACF,CAXM;AAYP,OAAO,MAAMG,cAAc,GAAG,MAAM,MAAOZ,QAAP,IAAoB;AACtD,MAAI;AACF,UAAMa,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,mCAAX,CAAlB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACAb,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAER,KAAK,CAACkB,QADL;AAEPR,MAAAA,OAAO,EAAEM,GAAG,CAACL;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD;AACF,CAXM,C,CAaP;;AACA,OAAO,MAAMO,cAAc,GAAG,MAAM,MAAOhB,QAAP,IAAoB;AACtD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,gCAAV,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAD,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAER,KAAK,CAACoB,QADL;AAEPV,MAAAA,OAAO,EAAEN,GAAG,CAACO;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD;AACF,CAXM;AAYP,OAAO,MAAMS,aAAa,GAAG,MAAM,MAAOlB,QAAP,IAAoB;AACrD,MAAI;AACF,UAAMa,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,gCAAX,CAAlB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACAb,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAER,KAAK,CAACsB,QADL;AAEPZ,MAAAA,OAAO,EAAEM,GAAG,CAACL;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD;AACF,CAXM","sourcesContent":["import * as TYPES from './types';\r\nimport axios from 'axios';\r\n\r\n// export const setLanguage = (payload) => {\r\n//   return {\r\n//     type: TYPES.SITE_LANG,\r\n//     payload,\r\n//   };\r\n// };\r\n\r\n// products requests -----------------------\r\nexport const getProductsAction = () => async (dispatch) =>{\r\n    try {\r\n        const res = await axios.get('https://fakestoreapi.com/products');\r\n        console.log(res);\r\n        dispatch({\r\n            type: TYPES.GET_PRODUCTS,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// blog requests -------------------------\r\nexport const getBlogsAction = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"https://fakestoreapi.com/products\");\r\n    console.log(res);\r\n    dispatch({\r\n      type: TYPES.GET_BLOGS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const AddBlogsAction = () => async (dispatch) => {\r\n  try {\r\n    const req = await axios.post(\"https://fakestoreapi.com/products\");\r\n    console.log(req);\r\n    dispatch({\r\n      type: TYPES.ADD_BLOG,\r\n      payload: req.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// get user -----------------------\r\nexport const getUsersAction = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"https://fakestoreapi.com/users\");\r\n    console.log(res);\r\n    dispatch({\r\n      type: TYPES.GET_USER,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const addUserAction = () => async (dispatch) => {\r\n  try {\r\n    const req = await axios.post(\"https://fakestoreapi.com/users\");\r\n    console.log(req);\r\n    dispatch({\r\n      type: TYPES.ADD_USER,\r\n      payload: req.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}