{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\J0E\\\\Programming\\\\ITI-Graduation-Project\\\\CarReact\\\\car-react\\\\src\\\\components\\\\Dropdown.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nexport default function Dropdown(props) {\n  _s();\n\n  const [state, setstate] = useState(\"\");\n\n  const handleChange = event => {\n    setstate(event.target.value);\n  };\n\n  useEffect(() => {\n    const inputField = document.querySelector(\".chosen-value\");\n    const dropdown = document.querySelector(\".value-list\");\n    const dropdownArray = [...document.querySelectorAll(\"li\")];\n    console.log(typeof dropdownArray); // dropdown.classList.add(\"open\");\n    // inputField.focus(); // Demo purposes only\n\n    let valueArray = []; // dropdownArray.forEach((item) => {\n    //   valueArray.push(item.textContent);\n    // });\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(\"open\");\n    };\n\n    inputField.addEventListener(\"input\", () => {\n      dropdown.classList.add(\"open\");\n      let inputValue = inputField.value.toLowerCase();\n      let valueSubstring;\n\n      if (inputValue.length > 0) {\n        for (let j = 0; j < valueArray.length; j++) {\n          if (!(inputValue.substring(0, inputValue.length) === valueArray[j].substring(0, inputValue.length).toLowerCase())) {\n            dropdownArray[j].classList.add(\"closed\");\n          } else {\n            dropdownArray[j].classList.remove(\"closed\");\n          }\n        }\n      } else {\n        for (let i = 0; i < dropdownArray.length; i++) {\n          dropdownArray[i].classList.remove(\"closed\");\n        }\n      }\n    });\n    dropdownArray.forEach(item => {\n      item.addEventListener(\"click\", evt => {\n        inputField.value = item.textContent;\n        dropdownArray.forEach(dropdown => {\n          dropdown.classList.add(\"closed\");\n        });\n      });\n    });\n    inputField.addEventListener(\"focus\", () => {\n      inputField.placeholder = \"Type to filter\";\n      dropdown.classList.add(\"open\");\n      dropdownArray.forEach(dropdown => {\n        dropdown.classList.remove(\"closed\");\n      });\n    });\n    inputField.addEventListener(\"blur\", () => {\n      inputField.placeholder = \"Select state\";\n      dropdown.classList.remove(\"open\");\n    });\n    document.addEventListener(\"click\", evt => {\n      const isDropdown = dropdown.contains(evt.target);\n      const isInput = inputField.contains(evt.target);\n\n      if (!isDropdown && !isInput) {\n        dropdown.classList.remove(\"open\");\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdownn\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"chosen-value\",\n        type: \"text\",\n        value: state,\n        placeholder: \"Type to filter\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"value-list\",\n        children: props.mapItems.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dropdown, \"ce9xQtPW0lmDAgnjd9vCJVkN5js=\");\n\n_c = Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["D:/J0E/Programming/ITI-Graduation-Project/CarReact/car-react/src/components/Dropdown.jsx"],"names":["React","useEffect","useState","Dropdown","props","state","setstate","handleChange","event","target","value","inputField","document","querySelector","dropdown","dropdownArray","querySelectorAll","console","log","valueArray","closeDropdown","classList","remove","addEventListener","add","inputValue","toLowerCase","valueSubstring","length","j","substring","i","forEach","item","evt","textContent","placeholder","isDropdown","contains","isInput","mapItems","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function Dropdown(props) {\r\n  const [state, setstate] = useState(\"\");\r\n  const handleChange = (event) => {\r\n    setstate(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    const inputField = document.querySelector(\".chosen-value\");\r\n\r\n    const dropdown = document.querySelector(\".value-list\");\r\n\r\n    const dropdownArray = [...document.querySelectorAll(\"li\")];\r\n\r\n    console.log(typeof dropdownArray);\r\n\r\n    // dropdown.classList.add(\"open\");\r\n    // inputField.focus(); // Demo purposes only\r\n    let valueArray = [];\r\n    // dropdownArray.forEach((item) => {\r\n    //   valueArray.push(item.textContent);\r\n    // });\r\n\r\n    const closeDropdown = () => {\r\n      dropdown.classList.remove(\"open\");\r\n    };\r\n\r\n    inputField.addEventListener(\"input\", () => {\r\n      dropdown.classList.add(\"open\");\r\n      let inputValue = inputField.value.toLowerCase();\r\n      let valueSubstring;\r\n      if (inputValue.length > 0) {\r\n        for (let j = 0; j < valueArray.length; j++) {\r\n          if (\r\n            !(\r\n              inputValue.substring(0, inputValue.length) ===\r\n              valueArray[j].substring(0, inputValue.length).toLowerCase()\r\n            )\r\n          ) {\r\n            dropdownArray[j].classList.add(\"closed\");\r\n          } else {\r\n            dropdownArray[j].classList.remove(\"closed\");\r\n          }\r\n        }\r\n      } else {\r\n        for (let i = 0; i < dropdownArray.length; i++) {\r\n          dropdownArray[i].classList.remove(\"closed\");\r\n        }\r\n      }\r\n    });\r\n\r\n    dropdownArray.forEach((item) => {\r\n      item.addEventListener(\"click\", (evt) => {\r\n        inputField.value = item.textContent;\r\n        dropdownArray.forEach((dropdown) => {\r\n          dropdown.classList.add(\"closed\");\r\n        });\r\n      });\r\n    });\r\n\r\n    inputField.addEventListener(\"focus\", () => {\r\n      inputField.placeholder = \"Type to filter\";\r\n      dropdown.classList.add(\"open\");\r\n      dropdownArray.forEach((dropdown) => {\r\n        dropdown.classList.remove(\"closed\");\r\n      });\r\n    });\r\n\r\n    inputField.addEventListener(\"blur\", () => {\r\n      inputField.placeholder = \"Select state\";\r\n      dropdown.classList.remove(\"open\");\r\n    });\r\n\r\n    document.addEventListener(\"click\", (evt) => {\r\n      const isDropdown = dropdown.contains(evt.target);\r\n      const isInput = inputField.contains(evt.target);\r\n      if (!isDropdown && !isInput) {\r\n        dropdown.classList.remove(\"open\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div className=\"dropdownn\">\r\n      <form>\r\n        <input\r\n          class=\"chosen-value\"\r\n          type=\"text\"\r\n          value={state}\r\n          placeholder=\"Type to filter\"\r\n          onChange={handleChange}\r\n        />\r\n        <ul class=\"value-list\">\r\n          {props.mapItems.map((item, index) => {\r\n            return <li key={index}>{item}</li>;\r\n          })}\r\n        </ul>\r\n      </form>\r\n      {/* <div className=\"select-box__current w-100\" tabindex=\"0\">\r\n        {props.mapItems.map((item, index) => {\r\n          return (\r\n            <div className=\"select-box__value\">\r\n              <input\r\n                className=\"select-box__input\"\r\n                type=\"radio\"\r\n                id={item + index}\r\n                value={item}\r\n                name={props.name}\r\n                checked=\"checked\"\r\n              />\r\n              <p className=\"select-box__input-text\">{item}</p>\r\n            </div>\r\n          );\r\n        })}\r\n        <img\r\n          className=\"select-box__icon\"\r\n          src=\"http://cdn.onlinewebfonts.com/svg/img_295694.svg\"\r\n          alt=\"Arrow Icon\"\r\n        />\r\n      </div>\r\n      <ul className=\"select-box__list\">\r\n        {props.mapItems.map((item, index) => {\r\n          return (\r\n            <li>\r\n              <label className=\"select-box__option\" for={item + index}>\r\n                {item}\r\n              </label>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}