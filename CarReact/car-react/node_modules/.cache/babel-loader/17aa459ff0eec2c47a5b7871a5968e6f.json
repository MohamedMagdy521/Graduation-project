{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\J0E\\\\Programming\\\\ITI-Graduation-Project\\\\CarReact\\\\car-react\\\\src\\\\components\\\\Dropdown.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Actions from \"../store/actions\";\nexport default function Dropdown(props) {\n  _s();\n\n  const blogFilterBrandActive = useSelector(state => state.blogFilterBrandActive);\n  const dispatch = useDispatch();\n  const [state, setstate] = useState(\"\");\n\n  const changeInputState = () => {\n    dispatch(Actions.getBlogsFilterBrandActive(\"JAHSJAHJ\"));\n  };\n\n  const handleChange = event => {\n    setstate(event.target.value);\n    setSubmit(event.target.value);\n    changeInputState();\n  };\n\n  const [submit, setSubmit] = useState({\n    name: \"\"\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"change\");\n    console.log(submit); //   axios\n    //     .post(\"http://localhost:3000/user/auth/signup\", userSignUpInfo)\n    //     .then((res) => {\n    //       console.log(res);\n    //       localStorage.setItem(\"Authorization\", res.headers.authorization);\n    //       console.log(localStorage.getItem(\"Authorization\"));\n    //       if (res.data.Success === true) {\n    //         console.log(\"hhkhkhkhk\");\n    //         props.history.push(\"/MyProfile\");\n    //       }\n    //     })\n    //     .catch((error) => {\n    //       console.log(error);\n    //     });\n  };\n\n  useEffect(() => {\n    const inputField = document.querySelector(\".chosen-value\");\n    const dropdown = document.querySelector(\".value-list\");\n    const dropdownArray = [...document.querySelectorAll(\"li\")];\n    console.log(typeof dropdownArray); // dropdown.classList.add(\"open\");\n    // inputField.focus(); // Demo purposes only\n\n    let valueArray = [];\n    dropdownArray.forEach(item => {\n      valueArray.push(item.textContent);\n    });\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(\"open\");\n    };\n\n    inputField.addEventListener(\"input\", () => {\n      dropdown.classList.add(\"open\");\n      let inputValue = inputField.value.toLowerCase();\n      let valueSubstring;\n\n      if (inputValue.length > 0) {\n        for (let j = 0; j < valueArray.length; j++) {\n          if (!(inputValue.substring(0, inputValue.length) === valueArray[j].substring(0, inputValue.length).toLowerCase())) {\n            dropdownArray[j].classList.add(\"closed\");\n          } else {\n            dropdownArray[j].classList.remove(\"closed\");\n          }\n        }\n      } else {\n        for (let i = 0; i < dropdownArray.length; i++) {\n          dropdownArray[i].classList.remove(\"closed\");\n        }\n      }\n    });\n    dropdownArray.forEach(item => {\n      item.addEventListener(\"click\", evt => {\n        inputField.value = item.textContent;\n        dropdownArray.forEach(dropdown => {\n          dropdown.classList.add(\"closed\");\n        });\n      });\n    });\n    inputField.addEventListener(\"focus\", () => {\n      inputField.placeholder = \"Type to filter\";\n      dropdown.classList.add(\"open\");\n      dropdownArray.forEach(dropdown => {\n        dropdown.classList.remove(\"closed\");\n      });\n    });\n    inputField.addEventListener(\"blur\", () => {\n      inputField.placeholder = \"Brand\";\n      dropdown.classList.remove(\"open\");\n    });\n    document.addEventListener(\"click\", evt => {\n      const isDropdown = dropdown.contains(evt.target);\n      const isInput = inputField.contains(evt.target);\n\n      if (!isDropdown && !isInput) {\n        dropdown.classList.remove(\"open\");\n      }\n    });\n  }, []); // const [loopOn, setLoopOn] = useState(\"\")\n  // setLoopOn(props.loopOn)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdownn\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"chosen-value\",\n        type: \"text\",\n        value: state,\n        name: props.name,\n        placeholder: \"Select Brand\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"value-list\",\n        children: props.mapItems.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item.make\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dropdown, \"eWxTjXPrp0vmHUVZlfXz89tR7Kg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["D:/J0E/Programming/ITI-Graduation-Project/CarReact/car-react/src/components/Dropdown.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Actions","Dropdown","props","blogFilterBrandActive","state","dispatch","setstate","changeInputState","getBlogsFilterBrandActive","handleChange","event","target","value","setSubmit","submit","name","handleSubmit","preventDefault","console","log","inputField","document","querySelector","dropdown","dropdownArray","querySelectorAll","valueArray","forEach","item","push","textContent","closeDropdown","classList","remove","addEventListener","add","inputValue","toLowerCase","valueSubstring","length","j","substring","i","evt","placeholder","isDropdown","contains","isInput","mapItems","map","make"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as Actions from \"../store/actions\";\r\n\r\nexport default function Dropdown(props) {\r\n\r\n\r\n\r\n  const blogFilterBrandActive = useSelector(state => state.blogFilterBrandActive);\r\n  const dispatch = useDispatch();\r\n  const [state, setstate] = useState(\"\");\r\n  const changeInputState = () =>{\r\n    dispatch(Actions.getBlogsFilterBrandActive(\"JAHSJAHJ\"))\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setstate(event.target.value);\r\n    setSubmit(event.target.value);\r\n    changeInputState();\r\n  };\r\n  const [submit, setSubmit] = useState({\r\n    name: \"\",\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"change\");\r\n\r\n    console.log(submit);\r\n    //   axios\r\n    //     .post(\"http://localhost:3000/user/auth/signup\", userSignUpInfo)\r\n    //     .then((res) => {\r\n    //       console.log(res);\r\n    //       localStorage.setItem(\"Authorization\", res.headers.authorization);\r\n    //       console.log(localStorage.getItem(\"Authorization\"));\r\n    //       if (res.data.Success === true) {\r\n    //         console.log(\"hhkhkhkhk\");\r\n    //         props.history.push(\"/MyProfile\");\r\n    //       }\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.log(error);\r\n    //     });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const inputField = document.querySelector(\".chosen-value\");\r\n    const dropdown = document.querySelector(\".value-list\");\r\n    const dropdownArray = [...document.querySelectorAll(\"li\")];\r\n    console.log(typeof dropdownArray);\r\n    // dropdown.classList.add(\"open\");\r\n    // inputField.focus(); // Demo purposes only\r\n    let valueArray = [];\r\n    dropdownArray.forEach((item) => {\r\n      valueArray.push(item.textContent);\r\n    });\r\n    const closeDropdown = () => {\r\n      dropdown.classList.remove(\"open\");\r\n    };\r\n    inputField.addEventListener(\"input\", () => {\r\n      dropdown.classList.add(\"open\");\r\n      let inputValue = inputField.value.toLowerCase();\r\n      let valueSubstring;\r\n      if (inputValue.length > 0) {\r\n        for (let j = 0; j < valueArray.length; j++) {\r\n          if (\r\n            !(\r\n              inputValue.substring(0, inputValue.length) ===\r\n              valueArray[j].substring(0, inputValue.length).toLowerCase()\r\n            )\r\n          ) {\r\n            dropdownArray[j].classList.add(\"closed\");\r\n          } else {\r\n            dropdownArray[j].classList.remove(\"closed\");\r\n          }\r\n        }\r\n      } else {\r\n        for (let i = 0; i < dropdownArray.length; i++) {\r\n          dropdownArray[i].classList.remove(\"closed\");\r\n        }\r\n      }\r\n    });\r\n    dropdownArray.forEach((item) => {\r\n      item.addEventListener(\"click\", (evt) => {\r\n        inputField.value = item.textContent;\r\n        dropdownArray.forEach((dropdown) => {\r\n          dropdown.classList.add(\"closed\");\r\n        });\r\n      });\r\n    });\r\n    inputField.addEventListener(\"focus\", () => {\r\n      inputField.placeholder = \"Type to filter\";\r\n      dropdown.classList.add(\"open\");\r\n      dropdownArray.forEach((dropdown) => {\r\n        dropdown.classList.remove(\"closed\");\r\n      });\r\n    });\r\n    inputField.addEventListener(\"blur\", () => {\r\n      inputField.placeholder = \"Brand\";\r\n      dropdown.classList.remove(\"open\");\r\n    });\r\n    document.addEventListener(\"click\", (evt) => {\r\n      const isDropdown = dropdown.contains(evt.target);\r\n      const isInput = inputField.contains(evt.target);\r\n      if (!isDropdown && !isInput) {\r\n        dropdown.classList.remove(\"open\");\r\n      }\r\n    });\r\n  }, []);\r\n  // const [loopOn, setLoopOn] = useState(\"\")\r\n  // setLoopOn(props.loopOn)\r\n  return (\r\n    <div className=\"dropdownn\">\r\n      <form onSubmit={handleSubmit} method=\"post\">\r\n        <input\r\n          class=\"chosen-value\"\r\n          type=\"text\"\r\n          value={state}\r\n          name={props.name}\r\n          placeholder=\"Select Brand\"\r\n          onChange={handleChange}\r\n        />\r\n        <ul class=\"value-list\">\r\n          {props.mapItems.map((item) => {\r\n            return <li>{item.make}</li>;\r\n          })}\r\n        </ul>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}