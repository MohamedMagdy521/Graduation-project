{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noraa\\\\Documents\\\\GitHub\\\\Graduation-project\\\\Graduation-project\\\\CarReact\\\\cars-admin\\\\src\\\\pages\\\\Sign\\\\LoginIn.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Loginin(props) {\n  _s();\n\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState({\n    email: null,\n    password: null\n  });\n\n  const triggreValue = e => {\n    var pattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    switch (e.target.name) {\n      case \"email\":\n        setState({ ...state,\n          email: e.target.value\n        });\n        setError({ ...error,\n          email: e.target.value.length <= 0 ? \"this field required\" : e.target.value.length <= 6 ? \"length must be 6 or more \" : pattern.test(e.target.value) ? null : \"in valid email\"\n        });\n        break;\n\n      case \"password\":\n        setState({ ...state,\n          password: e.target.value\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"DRECSYONY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            value: state.Email,\n            type: \"email\",\n            handleChange: e => tiggreValue(e),\n            className: \"form-control\",\n            name: \"Email\",\n            error: error.Email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            value: state.Password,\n            type: \"password\",\n            handleChange: e => tiggreValue(e),\n            className: \"form-control\",\n            name: \"Password\",\n            error: error.Password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-danger text-white\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-footer\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-primary\",\n              handelClick: SetLocalStorage,\n              storage: state.Email,\n              name: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Loginin, \"p1jzo3VA2GTggQr2njooA9tg47I=\");\n\n_c = Loginin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loginin\");","map":{"version":3,"sources":["C:/Users/noraa/Documents/GitHub/Graduation-project/Graduation-project/CarReact/cars-admin/src/pages/Sign/LoginIn.jsx"],"names":["useState","Loginin","props","state","setState","email","password","error","setError","triggreValue","e","pattern","target","name","value","length","test","Email","tiggreValue","Password","SetLocalStorage"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAEnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AAC/BK,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAlC;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AAC/BK,IAAAA,KAAK,EAAE,IADwB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAlC;;AAKA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAIC,OAAO,GAAG,6CAAd;;AACA,YAAQD,CAAC,CAACE,MAAF,CAASC,IAAjB;AACI,WAAK,OAAL;AACIT,QAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELE,UAAAA,KAAK,EAAEK,CAAC,CAACE,MAAF,CAASE;AAFX,SAAD,CAAR;AAIAN,QAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELF,UAAAA,KAAK,EAAEK,CAAC,CAACE,MAAF,CAASE,KAAT,CAAeC,MAAf,IAAyB,CAAzB,GAA6B,qBAA7B,GAEHL,CAAC,CAACE,MAAF,CAASE,KAAT,CAAeC,MAAf,IAAyB,CAAzB,GAA6B,2BAA7B,GAEIJ,OAAO,CAACK,IAAR,CAAaN,CAAC,CAACE,MAAF,CAASE,KAAtB,IAEM,IAFN,GAEa;AARhB,SAAD,CAAR;AAUA;;AAEJ,WAAK,UAAL;AACIV,QAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELG,UAAAA,QAAQ,EAAEI,CAAC,CAACE,MAAF,CAASE;AAFd,SAAD,CAAR;AAIA;;AACJ;AACI;AAzBR;AA2BH,GA7BD;;AA+BA,sBAEI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACA,QAAC,UAAD;AAAY,YAAA,KAAK,EAAEX,KAAK,CAACc,KAAzB;AAAgC,YAAA,IAAI,EAAC,OAArC;AAA6C,YAAA,YAAY,EAAGP,CAAD,IAAOQ,WAAW,CAACR,CAAD,CAA7E;AAAkF,YAAA,SAAS,EAAC,cAA5F;AAA2G,YAAA,IAAI,EAAC,OAAhH;AAAwH,YAAA,KAAK,EAAEH,KAAK,CAACU;AAArI;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,UAAD;AAAY,YAAA,KAAK,EAAEd,KAAK,CAACgB,QAAzB;AAAmC,YAAA,IAAI,EAAC,UAAxC;AAAmD,YAAA,YAAY,EAAGT,CAAD,IAAOQ,WAAW,CAACR,CAAD,CAAnF;AAAwF,YAAA,SAAS,EAAC,cAAlG;AAAiH,YAAA,IAAI,EAAC,UAAtH;AAAiI,YAAA,KAAK,EAAEH,KAAK,CAACY;AAA9I;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOI;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACA,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,iBAAlB;AAAoC,cAAA,WAAW,EAAEC,eAAjD;AAAkE,cAAA,OAAO,EAAEjB,KAAK,CAACc,KAAjF;AAAwF,cAAA,IAAI,EAAC;AAA7F;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBAFJ;AAoBH;;GA/DuBhB,O;;KAAAA,O","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function Loginin(props) {\r\n\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const [error, setError] = useState({\r\n        email: null,\r\n        password: null\r\n    });\r\n\r\n    const triggreValue = (e) => {\r\n        var pattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        switch (e.target.name) {\r\n            case \"email\":\r\n                setState({\r\n                    ...state,\r\n                    email: e.target.value\r\n                });\r\n                setError({\r\n                    ...error,\r\n                    email: e.target.value.length <= 0 ? \"this field required\" :\r\n\r\n                        e.target.value.length <= 6 ? \"length must be 6 or more \" :\r\n\r\n                            pattern.test(e.target.value)\r\n\r\n                                ? null : \"in valid email\"\r\n                })\r\n                break;\r\n\r\n            case \"password\":\r\n                setState({\r\n                    ...state,\r\n                    password: e.target.value\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n        <div className=\"container\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">DRECSYONY</div>\r\n                <div className=\"card-body\">\r\n                <InputField value={state.Email} type=\"email\" handleChange={(e) => tiggreValue(e)} className=\"form-control\" name=\"Email\" error={error.Email} />\r\n                <InputField value={state.Password} type=\"password\" handleChange={(e) => tiggreValue(e)} className=\"form-control\" name=\"Password\" error={error.Password} />\r\n\r\n                </div>\r\n                <div className=\"card bg-danger text-white\">\r\n                    <div className=\"card-footer\">\r\n                    <Button className=\"btn btn-primary\" handelClick={SetLocalStorage} storage={state.Email} name=\"Login\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}